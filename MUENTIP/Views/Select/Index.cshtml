@using MUENTIP.ViewModels
@using MUENTIP.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Select Page";
}


@model SelectViewModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Select Page</title>
    <link rel="stylesheet" href="~/css/Select/select.css" />
    <style></style>
</head>
<body>
    <header class="Banner">
        <button class="ReturnButton" onclick="history.back();">&#60;</button>
        <span>
            Select Participants
        </span>
    </header>

    <div id="rectangle_fill" class="rectangle-container">
        <div class="header">
            <h1 style="margin-top: 20px; margin-left: 20px">
                Select User <span id="selectedCount">0</span>
            </h1>

            <p style="margin-top: 20px; margin-left: 20px">
                Select users to approve them
            </p>
            <p style="margin-left: 20px">
                (you don't have to choose to match the expected people)
            </p>
        </div>
        <div style="
          display: flex;
          align-items: center;
          margin-top: 20px;
          margin-left: 30px;

        ">

            <img id="picture" src="@(Model.ownerImgLink ?? "/img/default-profile.png")" style="width: 80px; height: 80px; border-radius: 50%;" />
            <button class="Select_all_button"
                    id="selectAllBtn"
                    style="margin-left: 70px">
                Select all
            </button>
        </div>

        <hr class="line" style="margin-top: 20px" />
        <div id="container" style="margin-left: 0px"></div>

        <div>
            <button class="Confirm_button"
                    id="confirmBtn"
                    >
                Confirm
            </button>
        </div>
    </div>

    <div id="overlay"></div>
    <div id="notify-popup">
        <p class="noti-title">Sending Successful!</p>
        <p class="noti-context">Email sending successful!.</p>
        <div id="progress-container">
            <div id="progress-bar"></div>
        </div>
    </div>

    <div id="overlay2"></div>
    <div id="notify-popup2">
        <p class="noti-title">You are not the owner, access denied.</p>
        <div id="progress-container2">
            <div id="progress-bar2"></div>
        </div>
    </div>

    <script>
        var currentUserId = '@UserManager.GetUserId(User)';
        var selectModel = @Html.Raw(Json.Serialize(Model));
        console.log(selectModel.ownerId);
        console.log(currentUserId);

        if (currentUserId !== selectModel.ownerId) {
                    console.log("ApplyOn created successfully!");

        const overlay = document.getElementById("overlay2");
        const popup = document.getElementById("notify-popup2");
        const progressBar = document.getElementById("progress-bar2");

        overlay.style.display = "block";
        popup.style.display = "flex";
        popup.classList.remove("fade-out");
        overlay.classList.remove("fade-out");
        progressBar.style.width = "0%";

        setTimeout(() => {
            progressBar.style.width = "100%";
        }, 50);

        setTimeout(() => {
            popup.classList.add("fade-out");
            overlay.classList.add("fade-out");

            setTimeout(() => {
                popup.style.display = "none";
                overlay.style.display = "none";
                window.location.reload();
            }, 1000);
        }, 1000);
        setTimeout(function () {
            window.history.back();

        }, 1000);  // รอ 2 วินาที (2000 มิลลิวินาที)
            

        } else {
            console.log('Access granted to the page');
        }


    </script>
    <script src="~/js/Select/select.js"></script>
</body>
</html>